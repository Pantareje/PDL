P -> FUNCTION P
P -> STATEMENT P
P -> eof
FUNCTION -> function FUNTYPE id ( FUNATTRIBUTES ) { BODY }
FUNTYPE -> void
FUNTYPE -> VARTYPE
VARTYPE -> int
VARTYPE -> boolean
VARTYPE -> string
FUNATTRIBUTES -> void
FUNATTRIBUTES -> VARTYPE id NEXTATTRIBUTE
NEXTATTRIBUTE -> , VARTYPE id NEXTATTRIBUTE
NEXTATTRIBUTE -> lambda
BODY -> STATEMENT BODY
BODY -> lambda
STATEMENT -> if ( EXP1 ) ATOMSTATEMENT
STATEMENT -> for ( FORACT ; EXP1 ; FORACT ) { BODY }
STATEMENT -> var VARTYPE id ;
STATEMENT -> ATOMSTATEMENT
ATOMSTATEMENT -> id IDACT ;
ATOMSTATEMENT -> output EXP1 ;
ATOMSTATEMENT -> input id ;
ATOMSTATEMENT -> return RETURNEXP ;
IDACT -> ASS EXP1
IDACT -> ( CALLPARAM )
FORACT -> id ASS EXP1
FORACT -> lambda
ASS -> =
ASS -> +=
CALLPARAM -> EXP1 NEXTPARAM
CALLPARAM -> lambda
NEXTPARAM -> , EXP1 NEXTPARAM
NEXTPARAM -> lambda
RETURNEXP -> EXP1
RETURNEXP -> lambda
EXP1 -> EXP2 EXPOR
EXPOR -> || EXP2 EXPOR
EXPOR -> lambda
EXP2 -> EXP3 EXPAND
EXPAND -> && EXP3 EXPAND
EXPAND -> lambda
EXP3 -> EXP4 COMP
COMP -> COMPOP EXP4 COMP
COMP -> lambda
COMPOP -> >
COMPOP -> <
EXP4 -> EXPATOM ARITH
ARITH -> ARITHOP EXPATOM ARITH
ARITH -> lambda
ARITHOP -> +
ARITHOP -> -
EXPATOM -> id IDVAL
EXPATOM -> ( EXP1 )
EXPATOM -> cint
EXPATOM -> cstr
EXPATOM -> true
EXPATOM -> false
IDVAL -> ( CALLPARAM )
IDVAL -> lambda